version: '3.3'
services:
# ------------Support services-------------
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    restart: on-failure
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
## ------------Storage services-------------
#  customer-db:
#    image: mysql:5.7
#    container_name: customer-db
#    restart: on-failure
#    ports:
#      - 3306:3306
#    environment:
#      - MYSQL_USER=devuser
#      - MYSQL_PASSWORD=devpwd
#      - MYSQL_ROOT_PASSWORD=rootpwd
#      - MYSQL_DATABASE=customer-db
  product-db:
    image: mongo:latest
    container_name: product-db
    restart: on-failure
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: devuser
      MONGO_INITDB_ROOT_PASSWORD: devpwd
#  log-db:
#    image: influxdb:alpine
#    container_name: log-db
#    ports:
#      - 8086:8086
#    environment:
#      INFLUXDB_DB: logdb
#      INFLUXDB_USER: devuser
#      INFLUXDB_USER_PASSWORD: devpwd
## -------------Backend services---------------
#  customer:
#    build: ./backend/CustomerService
#    container_name: customer
#    volumes: 
#      - ./backend/CustomerService:/app
#    links:
#      - customer-db
#    depends_on:
#      - customer-db
#      - kafka
#    ports:
#      - 2000:2000
  product:
    build: ./backend/ProductService
    container_name: product
    volumes: 
      - ./backend/ProductService:/app
    links:
      - product-db
    depends_on:
      - product-db
      - kafka
    ports:
      - 2001:2001
#  log-server:
#    build: ./backend/LogService
#    container_name: log-server
#    volumes: 
#      - ./backend/LogService:/app
#    links:
#      - log-db
#    depends_on:
#      - log-db
#      - kafka
#    ports:
#      - 2002:2002
  gateway:
    build: ./backend/APIGateway
    container_name: gateway
    volumes:
      - ./backend/APIGateway:/app
    links:
#      - customer
      - product
#      - log-server
    depends_on:
#      - customer
      - product
#      - log-server
    ports:
      - 2003:2003
# -------------Frontend services---------------
  # pure:
  #   build: ./frontend/pure-with-web-components
  #   container_name: pure
  #   depends_on: 
  #     - gateway
  #   ports:
  #     - 2998:80
  perf:
    build: ./frontend/pure-with-lit-elements
    container_name: perf
    depends_on: 
      - gateway
    ports:
      - 2999:8081
  # baseline:
  #   build: ./frontend/react-baseline
  #   container_name: baseline
  #   links:
  #     - gateway
  #   depends_on:
  #     - gateway
  #   ports: 
  #     - 3000:3000
  # custom:
  #   build: ./frontend/react-custom-elements
  #   container_name: custom
  #   depends_on: 
  #     - gateway
  #   ports:
  #     - 3001:3001
  # react:
  #   build: ./frontend/react-lit-elements
  #   container_name: react
  #   depends_on: 
  #     - gateway
  #   ports:
  #     - 3002:3002
  #angular:
  #  build: ./frontend/angular-lit-elements
  #  container_name: angular
  #  depends_on: 
  #    - gateway
  #  ports: 
  #    - 4200:4200
# -------------Proxy services---------------
  # react-proxy:
  #   build: ./proxies/react-proxy
  #   container_name: react-proxy
  #   depends_on: 
  #     - react
  #   ports: 
  #     - 3010:3010
  # angular-proxy:
  #   build: ./proxies/angular-proxy
  #   container_name: angular-proxy
  #   depends_on:
  #     - angular
  #   ports: 
  #     - 3011:3011
